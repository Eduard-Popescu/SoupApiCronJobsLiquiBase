plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	jaxb
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	jaxb (
			'com.sun.xml.bind:jaxb-core',
			'com.sun.xml.bind:jaxb-xjc',
			'com.sun.xml.bind:jaxb-impl'
	)
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.0'
	implementation 'org.springframework.ws:spring-ws-core'
	implementation 'com.graphql-java:graphql-java:11.0' // NEW
	implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:1.0' // NEW
	implementation 'com.google.guava:guava:26.0-jre' // NEW
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'
}

test {
	useJUnitPlatform()
}

task generateJavaClasses {
	System.setProperty('javax.xml.accessExternalSchema', 'all')
	def jaxbTargetDir = file("src/main/java/")
	doLast {
		jaxbTargetDir.mkdirs()
		ant.taskdef(
				name: 'xjc',
				classname: 'com.sun.tools.xjc.XJCTask',
				classpath: configurations.jaxb.asPath
		)
		ant.jaxbTargetDir = jaxbTargetDir
		ant.xjc(
				destdir: '${jaxbTargetDir}',
				package: 'com.example.demo.wsdl',
				schema: 'src/main/resources/wsdl/file.wsdl',
				language: 'WSDL'
		)
	}
}
